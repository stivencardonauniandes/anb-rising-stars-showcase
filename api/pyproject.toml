[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "anb-rising-stars-api"
version = "1.0.0"
description = "ANB Rising Stars Showcase API - Basketball Skills Video Platform"
authors = [
    {name = "ANB Team", email = "dev@anb.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    "fastapi==0.104.1",
    "uvicorn[standard]==0.24.0",
    "pydantic==2.5.0",
    "pydantic[email]==2.5.0",
    "python-multipart==0.0.6",
    "sqlalchemy==2.0.23",
    "alembic==1.12.1",
    "psycopg2-binary==2.9.9",
    "python-jose[cryptography]==3.3.0",
    "bcrypt==4.0.1",
    "passlib[bcrypt]==1.7.4",
    "moviepy==1.0.3",
    "redis==5.0.1",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "httpx==0.25.2",
    "coverage==7.3.2",
    "black==23.11.0",
    "isort==5.12.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
    "bandit==1.7.5",
    "safety==2.3.5",
    "pylint==3.0.3",
]

test = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "httpx==0.25.2",
    "coverage==7.3.2",
]

lint = [
    "black==23.11.0",
    "isort==5.12.0",
    "flake8==6.1.0",
    "mypy==1.7.1",
    "bandit==1.7.5",
    "pylint==3.0.3",
]

security = [
    "bandit==1.7.5",
    "safety==2.3.5",
]

[project.urls]
Homepage = "https://github.com/anb-org/anb-rising-stars-showcase"
Documentation = "https://github.com/anb-org/anb-rising-stars-showcase/blob/main/README.md"
Repository = "https://github.com/anb-org/anb-rising-stars-showcase.git"
Issues = "https://github.com/anb-org/anb-rising-stars-showcase/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["*"]
exclude = ["tests*", "*.tests*", "alembic*"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | alembic/versions
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["api", "routers", "services", "models", "schemas", "database", "auth"]
skip = ["alembic/versions", "venv", ".venv", "env", ".env"]

# pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/venv/*", 
    "*/env/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/alembic/*",
    "*/conftest.py",
    "*/run_*.py",
    "*/setup.py",
    ".coverage",
    "htmlcov/*",
]
parallel = true
context = '${CONTEXT}'

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
ignore_errors = true
show_missing = true
precision = 2
skip_covered = false
skip_empty = false

[tool.coverage.html]
directory = "htmlcov"
title = "ANB Rising Stars API Coverage Report"

[tool.coverage.xml]
output = "coverage.xml"

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "alembic.*",
    "moviepy.*",
    "redis.*",
    "passlib.*",
    "jose.*",
]
ignore_missing_imports = true

# Pylint configuration
[tool.pylint.main]
extension-pkg-allow-list = ["pydantic"]
load-plugins = ["pylint.extensions.docparams"]

[tool.pylint.format]
max-line-length = 88
good-names = ["i", "j", "k", "ex", "Run", "_", "id", "db"]

[tool.pylint.messages_control]
disable = [
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-locals",
    "import-error",
    "no-name-in-module",
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
]

[tool.pylint.design]
max-args = 10
max-locals = 20
max-returns = 8
max-branches = 15
max-statements = 60
max-parents = 10
max-attributes = 15
min-public-methods = 1
max-public-methods = 25

# Bandit configuration
[tool.bandit]
exclude_dirs = ["tests", "alembic", "venv", ".venv"]
skips = ["B101", "B601"]

# Bandit ignore rules:
# B101: Test for use of assert
# B601: paramiko calls
