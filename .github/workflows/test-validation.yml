name: Test Validation

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  test-matrix:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    environment: PROD
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: anb_showcase_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./api
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/anb_showcase_test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-matrix" >> $GITHUB_ENV

    - name: Run database migrations
      working-directory: ./api
      run: |
        alembic upgrade head

    - name: Run all tests at once
      working-directory: ./api
      run: |
        python -m pytest tests/ -v --tb=short --maxfail=0 --durations=10

  api-validation:
    name: API Validation Tests
    runs-on: ubuntu-latest
    environment: PROD
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: anb_showcase_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      working-directory: ./api
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/anb_showcase_test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-api-validation" >> $GITHUB_ENV

    - name: Run database migrations
      working-directory: ./api
      run: |
        alembic upgrade head

    - name: Run API tests
      working-directory: ./api
      run: |
        echo "🧪 Running API validation tests..."
        python -m pytest tests/ -v --tb=short --maxfail=0 --durations=5
        echo "✅ API tests completed successfully!"


  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test-matrix, api-validation]
    if: always()
    
    steps:
    - name: Generate Test Summary
      run: |
        echo "## 🧪 Test Validation Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Matrix Tests (Multiple Python Versions)" >> $GITHUB_STEP_SUMMARY
        echo "| Python Version | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|----------------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| 3.9 | ${{ contains(needs.test-matrix.result, 'success') && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 3.10 | ${{ contains(needs.test-matrix.result, 'success') && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 3.11 | ${{ contains(needs.test-matrix.result, 'success') && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 3.12 | ${{ contains(needs.test-matrix.result, 'success') && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### API Validation Tests" >> $GITHUB_STEP_SUMMARY
        echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| API Tests | ${{ needs.api-validation.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Overall Status**: ${{ (needs.test-matrix.result == 'success' && needs.api-validation.result == 'success') && '🎉 All Tests Passed!' || '⚠️ Some Tests Failed' }}" >> $GITHUB_STEP_SUMMARY
