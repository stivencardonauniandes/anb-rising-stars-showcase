name: Test Validation

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run tests daily at 3 AM UTC
    - cron: '0 3 * * *'
  workflow_dispatch:

jobs:
  test-matrix:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']
        
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: anb_showcase_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-

    - name: Install dependencies
      working-directory: ./api
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/anb_showcase_test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-matrix" >> $GITHUB_ENV

    - name: Run database migrations
      working-directory: ./api
      run: |
        alembic upgrade head

    - name: Run tests
      working-directory: ./api
      run: |
        python -m pytest tests/ -v --tb=short --maxfail=5

    - name: Test specific endpoints
      working-directory: ./api
      run: |
        python -m pytest tests/test_public_endpoints.py::TestVoteEndpoint::test_vote_for_video_success -v
        python -m pytest tests/test_public_endpoints.py::TestRankingsEndpoint::test_get_rankings_default_params -v

  integration-test:
    name: Integration Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: anb_showcase_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      working-directory: ./api
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install httpx

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/anb_showcase_test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-integration" >> $GITHUB_ENV

    - name: Run database migrations
      working-directory: ./api
      run: |
        alembic upgrade head

    - name: Start API server in background
      working-directory: ./api
      run: |
        uvicorn main:app --host 0.0.0.0 --port 8000 &
        sleep 5
      
    - name: Test API health endpoints
      run: |
        curl -f http://localhost:8000/api/health || exit 1
        curl -f http://localhost:8000/health || exit 1

    - name: Test API documentation
      run: |
        curl -f http://localhost:8000/docs || exit 1
        curl -f http://localhost:8000/openapi.json || exit 1

    - name: Test public rankings endpoint
      run: |
        curl -f "http://localhost:8000/api/public/rankings" | jq '.videos' || exit 1
        curl -f "http://localhost:8000/api/public/rankings/stats" | jq '.total_videos' || exit 1

    - name: Run integration tests
      working-directory: ./api
      run: |
        python -m pytest tests/ -v -k "integration" || echo "No integration tests found"

  performance-test:
    name: Performance Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: anb_showcase_test
        ports:
          - 5432:5432

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      working-directory: ./api
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install locust

    - name: Set up environment variables
      run: |
        echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/anb_showcase_test" >> $GITHUB_ENV
        echo "REDIS_URL=redis://localhost:6379/0" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-performance" >> $GITHUB_ENV

    - name: Run database migrations
      working-directory: ./api
      run: |
        alembic upgrade head

    - name: Create test data
      working-directory: ./api
      run: |
        python -c "
import sys
sys.path.append('.')
from database import get_db
from models import User, Video
from auth import get_password_hash
import uuid

db = next(get_db())

# Create test users
for i in range(10):
    user = User(
        id=uuid.uuid4(),
        email=f'user{i}@test.com',
        first_name=f'User{i}',
        last_name='Test',
        password=get_password_hash('testpass123'),
        city='Test City',
        country='Test Country'
    )
    db.add(user)

# Create test videos
users = db.query(User).all()
for i, user in enumerate(users[:5]):
    video = Video(
        id=uuid.uuid4(),
        user_id=user.id,
        raw_video_id=uuid.uuid4(),
        title=f'Test Video {i+1}',
        status='processed',
        original_url=f'https://example.com/video{i+1}.mp4',
        processed_url=f'https://example.com/processed{i+1}.mp4',
        votes=i * 5
    )
    db.add(video)

db.commit()
db.close()
print('Test data created successfully')
        "

    - name: Start API server
      working-directory: ./api
      run: |
        uvicorn main:app --host 0.0.0.0 --port 8000 &
        sleep 5

    - name: Run basic performance test
      run: |
        # Simple load test with curl
        echo "Testing rankings endpoint performance..."
        time curl -s "http://localhost:8000/api/public/rankings" > /dev/null
        
        # Test multiple concurrent requests
        for i in {1..10}; do
          curl -s "http://localhost:8000/api/public/rankings?page=$i" > /dev/null &
        done
        wait
        
        echo "Performance test completed"

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [test-matrix, integration-test, performance-test]
    if: always()
    
    steps:
    - name: Generate Test Summary
      run: |
        echo "## 🧪 Test Validation Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Matrix Tests (Multiple Python Versions)" >> $GITHUB_STEP_SUMMARY
        echo "| Python Version | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|----------------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| 3.9 | ${{ contains(needs.test-matrix.result, 'success') && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 3.10 | ${{ contains(needs.test-matrix.result, 'success') && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 3.11 | ${{ contains(needs.test-matrix.result, 'success') && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| 3.12 | ${{ contains(needs.test-matrix.result, 'success') && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Integration & Performance Tests" >> $GITHUB_STEP_SUMMARY
        echo "| Test Type | Status |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
        echo "| Integration Tests | ${{ needs.integration-test.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "| Performance Tests | ${{ needs.performance-test.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Overall Status**: ${{ (needs.test-matrix.result == 'success' && needs.integration-test.result == 'success' && needs.performance-test.result == 'success') && '🎉 All Tests Passed!' || '⚠️ Some Tests Failed' }}" >> $GITHUB_STEP_SUMMARY
