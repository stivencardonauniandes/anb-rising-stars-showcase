version: '3.8'

services:
  api:
    build: ./api
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/anb_showcase
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./api:/app
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redisinsight:
    image: redislabs/redisinsight:latest
    ports:
      - "5540:5540"
    depends_on:
      - redis
    restart: unless-stopped
    volumes:
      - redisinsight_data:/db
    networks:
      - app-network

  worker:
    build: ./worker
    depends_on:
      - postgres
      - redis
    volumes:
      - ./worker/configs/.env:/app/configs/.env:ro
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - app-network

  prometheus:
    image: prom/prometheus:v2.53.0
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    ports:
      - "9091:9090"
    depends_on:
      - worker
    restart: unless-stopped
    networks:
      - app-network

  grafana:
    image: grafana/grafana-oss:11.1.0
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    restart: unless-stopped
    networks:
      - app-network

  nextcloud:
    image: nextcloud:latest
    ports:
      - "8080:80"
    volumes:
      - nextcloud_data:/var/www/html
      - ./next_cloud:/next_cloud
    environment:
      - NEXTCLOUD_ADMIN_USER=worker
      - NEXTCLOUD_ADMIN_PASSWORD=super-secret
      - NEXTCLOUD_TRUSTED_DOMAINS=localhost nextcloud
      - POSTGRES_HOST=postgres
      - POSTGRES_DB=nextcloud
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    entrypoint: /next_cloud/entrypoint.sh
    command: apache2-foreground
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/status.php"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
  redisinsight_data:
  prometheus_data:
  grafana_data:
  nextcloud_data:

networks:
  app-network:
    driver: bridge
